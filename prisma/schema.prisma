// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Branch {
  id         String   @id @default(uuid())
  name       String   @unique
  code       String   @unique
  address    String
  contact    String
  status     String // Approved, Pending, Rejected
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
}

model allowed_companies {
  Oid                   String    @id @default(uuid())
  ID                    String    @unique @default(uuid())
  ACCOUNTNUMBER         String
  FIELDNAME             String
  APPROVEUSER           String?
  APPROVED              Boolean   @default(false)
  STATUS                Boolean   @default(false)
  INSERTDATE            DateTime? @default(now())
  UPDATEDATE            DateTime? @updatedAt
  INSERTUSER            String
  UPDATEUSER            String
  OptimisticLockField   Int
  GCRecord              Int
  branchName            String?
}

model Merchant_users {
  ID                String   @id @default(uuid())
  FULLNAME          String
  ROLE              String
  STATUS            String
  ACCOUNTNUMBER     String
  ACCOUNTTYPE       String
  PHONENUMBER       String   @unique
  DEVICENAME        String
  ENCRYPTIONKEY     String
  iV                String
  ISLOGGEDIN        Boolean
  authenticationkey String
  FAILEDATTMEPTS    Int
  LASTLOGINATTEMPT  DateTime?
  ISLOCKED          Boolean
  UNLOCKEDTIME      DateTime?
  VALUE3            String?
  INSERTUSERID      String
  UPDATEUSERID      String
  INSERTDATE        DateTime? @default(now())
  UPDATEDATE        DateTime? @updatedAt
  DashBoardRoles    DashBoardRoles? @relation(fields: [roleId], references: [id])
  roleId            String?
  ApplicationRole   Roles? @relation(fields: [applicationRoleId], references: [ID])
  applicationRoleId String?
}

model BranchUser {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  branch    String
  status    String   // Active, Inactive, Pending
  DashBoardRoles  DashBoardRoles? @relation(fields: [roleId], references: [id])
  roleId    String?
}

model merchants_daily_balances {
  ID              String    @id @default(uuid())
  MERCHANTACCOUNT String
  MERCHANTPHONE   String
  DAILYBALANCE    Decimal   @db.Decimal(18, 2)
  DAILYTXNCOUNT   Int
  BALANCEDATE     DateTime?
  INSERTDATE      DateTime? @default(now())
  UPDATEDATE      DateTime? @updatedAt
  INSERTUSER      String
  UPDATEUSER      String
}

model merchant_txns {
  ID                   String    @id @default(uuid())
  MERCHANTACCOUNT      String
  MERCHANTPHONE        String
  AMOUNT               Decimal   @db.Decimal(18, 2)
  TXNID                String
  CUSTOMERNAME         String
  CUSTOMERACCOUNT      String
  T24USER              String
  T2TRANSACTIONDATE    DateTime?
  STATUS               String
  TRANSACTIONCHANNEL   String
  TRANSACTIONSERVICE   String
  VALUE1               String?
  VALUE2               String?
  VALUE3               String?
  INSERTDATE           DateTime? @default(now())
  UPDATEDATE           DateTime? @updatedAt
  INSERTUSER           String
  UPDATEUSER           String
}

model arif_requests {
  NONCEID                  String    @id
  SESSIONID                String
  DEBITACCOUNT             String
  CREDITACCOUNT            String
  MERCHANTACCOUNT          String
  AMOUNT                   Decimal   @db.Decimal(18, 2)
  ARIFPAYTRANSACTIONID     String?
  T24TRANSACTIONID         String?
  ARIFPAYTRANSACTIONSTATUS String?
  T24TRANSACTIONSTATUS     String?
  SALESPHONE               String?
  WEBHOOKRESPONSE          String?
  REQUEST1                 String?
  RESPONSE1                String?
  REQUEST2                 String?
  RESPONSE2                String?
  REQUEST3                 String?
  RESPONSE3                String?
  ERROR1                   String?
  MESSAGE1                 String?
  ERROR2                   String?
  MESSAGE2                 String?
  ERROR3                   String?
  MESSAGE3                 String?
  DATESEND1                DateTime?
  DATERECIVED1             DateTime?
  DATESEND2                DateTime?
  DATERECIVED2             DateTime?
  DATESEND3                DateTime?
  DATERECIVED3             DateTime?
  WEBHOOKRECEIVEDDATE      DateTime?
  INSERTUSER               String
  UPDATEUSER               String
}

model arifpay_endpoints {
  ID                  String   @id @default(uuid())
  BANK                String
  DISPLAYNAME         String
  OTPLENGTH           Int
  ORDER               Int
  ENDPOINT1           String
  ENDPOINT2           String?
  ENDPOINT3           String?
  CANCELURL           String
  ERRORURL            String
  SUCCESSURL          String
  NOTIFYURL           String
  ISTWOSTEP           Boolean
  ISOTP               Boolean
  TRANSACTIONTYPE     String
  BENEFICIARYACCOUNT  String
  BENEFICIARYBANK     String
  IMAGEURL            String
  INSERTDATE          DateTime? @default(now())
  UPDATEDATE          DateTime? @updatedAt
  INSERTUSER          String
  UPDATEUSER          String
}

model controllersconfigs {
  ID            String   @id @default(uuid())
  CONTROLLERKEY String
  APIKEY        String
  INSERTDATE    DateTime? @default(now())
  UPDATEDATE    DateTime? @updatedAt
  INSERTUSER    String
  UPDATEUSER    String
}

model core_integration_settings {
  ID         String   @id @default(uuid())
  UNIQUEKEY  String   @unique
  ADDRESS    String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
  INSERTUSER String
  UPDATEUSER String
}

model paystream_txns {
  ID                    String   @id @default(uuid())
  MERCHANTACCOUNTNUMBER String
  SALERPHONENUMBER      String
  TICKET                String
  ISCOMPLETED           Boolean
  AMOUNT                String
  PAYERACCOUNT          String?
  INSERTDATE            DateTime? @default(now())
  UPDATEDATE            DateTime? @updatedAt
  INSERTUSER            String
  UPDATEUSER            String
}

model stream_pay_settings {
  ID         String   @id @default(uuid())
  ADDRESS    String
  IV         String
  KEY        String
  HV         String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
  INSERTUSER String
  UPDATEUSER String
}

model ussd_push_settings {
  ID         String   @id @default(uuid())
  ADDRESS    String
  RESULTURL  String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
  INSERTUSER String
  UPDATEUSER String
}

model qr_payments {
  ID               String   @id @default(uuid())
  DEBITACCOUNT     String
  CREDITACCOUNT    String
  SALERPHONENUMBER String
  AMOUNT           Decimal  @db.Decimal(18, 2)
  EXPIRETIME       DateTime
  QRCODE           String
  ISUSED           Boolean
  INSERTDATE       DateTime? @default(now())
  UPDATEDATE       DateTime? @updatedAt
  INSERTUSER       String
  UPDATEUSER       String
}

model account_infos {
  ID            String   @id @default(uuid())
  ACCOUNTNUMBER String
  PHONENUMBER   String
  FULLNAME      String
  GENDER        String?
  VALUE1        String?
  VALUE2        String?
  INSERTDATE    DateTime? @default(now())
  UPDATEDATE    DateTime? @updatedAt
  INSERTUSER    String
  UPDATEUSER    String
}

model promo_adds {
  ID           String   @id @default(uuid())
  ADDTITLE     String
  ADDSUBTITLE  String
  ADDADDRESS   String
  IMAGEADDRESS String
  ORDER        Int
  INSERTUSERID String
  UPDATEUSERID String
  INSERTDATE   DateTime? @default(now())
  UPDATEDATE   DateTime? @updatedAt
}

model role_capablities {
  ID            String   @id @default(uuid())
  ROLEID        String
  MENUORDER     Int
  SUBMENUORDER  Int
  MENUNAME      String
  MENUNAME_am   String
  ADDRESS       String
  PARENT        Boolean?
  PARENTID      String?
  VALUE3        String?
  INSERTUSERID  String
  UPDATEUSERID  String
  INSERTDATE    DateTime? @default(now())
  UPDATEDATE    DateTime? @updatedAt
}

model DashBoardRoles {
  id          String   @id
  name        String   @unique
  description String?
  permissions Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Merchant_users Merchant_users[]
  BranchUser  BranchUser[]
}

model Roles {
  ID       String    @id @default(uuid())
  ROLENAME String    @unique
  Merchant_users Merchant_users[]
}
